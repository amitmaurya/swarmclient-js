const Chimp = require('chimp/dist/lib/chimp');
const {promisify} = require('util');
const freeport = promisify(require('freeport'));
const optionsLoader = require('chimp/dist/lib/options-loader');
const Emulator = require('../../emulator/Emulator');
const exit = require('exit');
const minimist = require('minimist');


process.on('SIGINT', () => exit());


const argv = minimist(process.argv, {
    default: optionsLoader.getOptions(),
    boolean: [
        // - - - - CHIMP - - - -
        'watch', 'watchWithPolling', 'server', 'sync', 'offline',

        // - - - - CUCUMBER - - - -
        'singleSnippetPerFile', 'chai', 'screenshotsOnError', 'captureAllStepScreenshots', 'saveScreenshotsToDisk', 'saveScreenshotsToReport',

        // - - - - SELENIUM  - - - -

        // - - - - WEBDRIVER-IO  - - - -

        // - - - - SESSION-MANAGER  - - - -
        'noSessionReuse',

        // - - - - SIMIAN  - - - -

        // - - - - MOCHA  - - - -
        'mocha',

        // - - - - METEOR  - - - -

        // - - - - DEBUGGING  - - - -
        'debug']
});


console.log(argv);

const start = async () => {
    Emulator.setMaxNodes(1);
    Emulator.start(8200);
    const chimp = new Chimp(Object.assign(argv, {
        mocha: true,
        port: await freeport(),
        path: `${__dirname}/features`
    }));

    chimp.init(err => {
        console.log('chimp init error', err)
        exit(err ? 2 : 0);
    });


};

start();
